//Math Commands

name = sum 
alt = + 
numArgs = 2
class = parser.node.math.SumNode

name = difference 
alt = - 
numArgs = 2
class = parser.node.math.DifferenceNode

name = minus 
alt = ~
numArgs = 1
class = parser.node.math.MinusNode

name = product 
alt = *
numArgs = 2
class = parser.node.math.ProductNode

name = quotient 
alt = /
numArgs = 2
class = parser.node.math.QuotientNode

name = random 
alt = 
numArgs = 1
class = parser.node.math.RandomNode

name = Remainder 
alt = %
numArgs = 2
class = parser.node.math.RemainderNode

//Logic Commands 

name = and 
alt = &
numArgs = 2
class = parser.node.logic.AndNode

name = or 
alt = |
numArgs = 2
class = parser.node.logic.OrNode

name = equal? 
alt = equalp
numArgs = 2
class = parser.node.logic.EqualNode

name = notequal? 
alt = notequalp
numArgs = 2
class = parser.node.logic.NotEqualNode

name = greater? 
alt = greaterp
numArgs = 2
class = parser.node.logic.GreaterNode

name = less? 
alt = lessp
numArgs = 2
class = parser.node.logic.LessNode

name = not 
alt = !
numArgs = 1
class = parser.node.logic.NotNode

//Turtle commands 

name = forward 
alt = fd
numArgs = 1
class = parser.node.turtleCommand.TurtleCommandNode

name = backward 
alt = bk
numArgs = 1
class = parser.node.turtleCommand.TurtleCommandNode

name = left 
alt = lt
numArgs = 1
class = parser.node.turtleCommand.TurtleCommandNode

name = right 
alt = rt
numArgs = 1
class = parser.node.turtleCommand.TurtleCommandNode

name = setheading 
alt = seth
numArgs = 1
class = parser.node.turtleCommand.TurtleCommandNode

name = setxy 
alt = 
numArgs = 2
class = parser.node.turtleCommand.TurtleCommandNode

name = towards 
alt = 
numArgs = 2
class = parser.node.turtleCommand.TurtleCommandNode







